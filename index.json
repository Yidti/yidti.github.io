[{"categories":["Study"],"contents":"大約兩年前於Udemy上購買了此課程\nhttps://www.udemy.com/course/the-complete-web-development-bootcamp/\nThe Complete 2022 Web Development Bootcamp Become a Full-Stack Web Developer with just ONE course. HTML, CSS, Javascript, Node, React, MongoDB, build real projects 最近才開始上她的課程，真的是非常不錯！ Dr. Angela Yu 是一位非常棒的老師， 課程豐富之外，不時會鼓勵學習者要Keep going!\n完成學習進度  Html Done CSS Done Bootstrap Done  繼續努力中！學習網頁知識真的非常有趣又實用呢 :) 希望扎實地學習完後能應用在生活與工作中 ~ ","permalink":"https://yidti.github.io/blog/study/web_bootcamp/","tags":["Web Development"],"title":"Web Development - 網路開發"},{"categories":["Website"],"contents":" 每篇文章下方參考資訊，其連結原本都是用Markdown語法 [Yidti的網誌](https://yidti.github.io/) 但是他們都不會新開分頁，而直接將本分頁進此此連結   設定開啟新分頁的連結  建立Short code (themes/liva-hugo/layouts/shortcodes)   建立一個新檔案 newtabref.html，輸入以下內容 \u0026lt;a href=\u0026#34;{{ .Get \u0026#34;href\u0026#34; }}\u0026#34; rel=\u0026#34;noopener\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;{{ .Get \u0026#34;title\u0026#34; }}\u0026lt;/a\u0026gt;  開啟新分頁的連結寫法   使用shortcode {{\u0026lt; newtabref href=\u0026#34;https://yidti.github.io/\u0026#34; title=\u0026#34;Yidti的網誌\u0026#34;\u0026gt;}}  未來點開連結就會開啟新分頁摟！\nReference Hugo external link new tab ","permalink":"https://yidti.github.io/blog/hugo/external_link/","tags":["Github"],"title":"Hugo - External link"},{"categories":["Tools"],"contents":"由於個人學習原因，創了不同Github帳號來寫程式， 切換帳號覺得很麻煩，於是想合併這些Github帳號 \u0026gt;o\u0026lt;  將欲保留的repositories進行轉移   即將移除帳號中設定進行轉移動作 保留帳號信箱確認轉移信件 保留帳號中確認轉移成功  更新remote URLs   查詢remote的位置  $ git remote -v origin git@github.com:USERNAME/REPOSITORY.git (fetch) origin git@github.com:USERNAME/REPOSITORY.git (push)  更新remote的位置  $ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git 刪除Github帳號    把過去commits歸於保留帳號所有   進入保留帳號，加入慣用的email，用於未來commits使用  Reference Merging multiple user accounts Merge Multiple GitHub Accounts \u0026#43; Transfer Commit History ","permalink":"https://yidti.github.io/blog/github/merge_accounts/","tags":["Github"],"title":"Github - Merge Accounts"},{"categories":["Tools"],"contents":"使用Github Desktop 介面化很簡單操作，但問題也一堆唷～ 寫網誌某一天，網誌裡頭的圖片變多了一些\n上傳的時候就遇到這種事情？？？\n由於桌面視窗不像指令視窗這樣可以看到狀態所以頗麻煩＠＠\n推斷主因是：上傳至Github的圖片變多變大了，於是就去Stack Overflow瞜～\n  由於去年購入Apple的Macbook M1之後，愛上它了~ 還在學習操作macOS， 所以網誌都是用macOS唷，windows使用者就請多包涵 (應該大同小異) 1. 首先用Finder進入備份至Github的網站資料夾，點擊 前往/前往檔案夾   2. 搜索.git資料夾   3. 從.git資料夾中，點擊開啟config檔案   4. 於文字編輯中新增以下內容(擴充buffer)，並記得儲存 [http] postBuffer = 524288000  記得存擋！！！  操作完後重新Github就不會卡頓拉！！！ 若是直接操作指令，請輸入以下指令 (後面那串數字緩衝容量自行修改) git config --global http.postBuffer 524288000 Reference How to push or upload images to github?\ngit push hangs after Total line\n","permalink":"https://yidti.github.io/blog/github/push_hangs/","tags":["Github"],"title":"Github - Git Push hangs"},{"categories":["Website"],"contents":"如何讓你的網頁能被Google搜尋到? 1. 設定 Google Search Console  進入連結 Google Search Console 點擊 立即開始 輸入網站前置字元 (https://****.github.io) 點擊 繼續 有申請過Google Analytics就可以通過驗證擁有權，會出現此訊息 點擊 前往資源 其他驗證方式請參考Reference 點擊進入Sitemap，提交sitemap網址 (Hugo預設產生sitemap.xml檔案)  [心得] 提交後通常都會等很久(好幾天？)，Google才會把你的sitemap索引加入搜索，這時候可以先來來手動新增 2. 手動新增網頁  於狀態列輸入想要提交的網址 測試網站是否能夠編入索引 網址不在Google服務中，提出建立索引要求  3. 檢查網址是否已經可以被搜索  請在Google搜尋中輸入，site:加上網址，進行測試 例如\nsite:yidti.github.io 搜尋結果有出現你的網址表示已經成功加入索引服務瞜！  Reference Google Search Console\nGoogle Search Console 教學，5種超完整安裝方法！\nHahow課程 - Github 免費架站術！輕鬆打造個人品牌\n","permalink":"https://yidti.github.io/blog/hugo/gsc/","tags":["Hugo"],"title":"Hugo - Google Search Console"},{"categories":["Invest"],"contents":"今日來介紹 台幣入金＆出金 交易所\nMainCoin| Max\n 首先點選推薦碼，輸入信箱地址、密碼、進行註冊   https://max.maicoin.com/signup?r=43841f9f\n密碼必須包含 至少8個字符、大寫英文字母、小寫英文字母、數字 點選法條與隱私聲明後，點擊創建帳戶(Create Account)  進行進行帳號設定之LV.1   信箱認證：寄出認證信 從信箱中找到認證信，並於十分鐘之後點擊認證連結，重新登入帳號 繼續進行以下LV.1認證 (強烈建議綁定Google 雙重認證) 手機認證：依照說明獲取驗證碼並進行手機號碼綁定 基本資料驗證：依照說明填寫 台灣國籍及ARC身份驗證：依照說明上傳照片  上傳 手持身分證自拍照 (建議用腳架調整，檢查證件是否清晰？) 上傳 身份證正面 上傳 身份證反面 上傳 第二證件 (手機帳單、健保卡、駕照、護照)   進行帳號設定之LV.2 銀行綁定   建議找每個月提供幾次免轉帳手續費的銀行帳戶  選擇銀行 選擇分行 選擇帳號  等待審核時間大概3~5天 (假日似乎不算)  轉帳入金   審核通過後，系統會發簡訊以及E-mail通知您，並提供一組遠東銀行的帳號 入金方式必須由經由審核通過的銀行帳號轉帳進去即可入金  成功入金後，請謹慎操作資金買賣！ Reference Maicoin| Max 官方網站\n","permalink":"https://yidti.github.io/blog/cryptocurrency/maicoin_max/","tags":["cryptocurrency","Exchange"],"title":"Cryptocurrency - MaiCoin｜Ｍax"},{"categories":["Website"],"contents":"寫網誌的時候，主題themes在累積滿六篇文章之後，\n不知道為什麼沒有顯示，前一頁後一頁的分頁設定？\n後來發現我在 themes/liva-hugo/layouts/index.md\n尾段好像不小心註解某段程式碼\n解決方案：取消註解就可以了www~~\n\u0026lt;!-- pagination --\u0026gt; \u0026lt;div class=\u0026#34;col-12 mt-5\u0026#34;\u0026gt; {{ template \u0026#34;_internal/pagination.html\u0026#34; . }} \u0026lt;/div\u0026gt;  原始顯示： 修改顯示：  同時將config.toml修改參數paginate，將可以修改首頁顯示篇數\n  Reference Hugo - pagination\n","permalink":"https://yidti.github.io/blog/hugo/pagination/","tags":["Hugo"],"title":"Hugo - 切換分頁"},{"categories":["Invest"],"contents":"接觸新領域，加密貨幣蠻有趣的！\n2021年末才開始接觸，算晚嗎？ 投資始終不嫌晚，不要當韭菜各位加油！\n即將要進場的觀眾們給各位忠告：\n 新領域慎防詐騙 交易所的資安性 交易所的倒閉風險 投資各幣別風險評估 未知領域知識攝取 進行資產分配 開心過生活！！！   推薦線上課程：\n用 Python 理財：打造加密貨幣實戰策略 推薦相關書籍：\n比特幣投資金律：加密貨幣實戰教學與進階獲利法  ","permalink":"https://yidti.github.io/blog/cryptocurrency/introduction/","tags":["cryptocurrency"],"title":"Cryptocurrency - 學習加密貨幣"},{"categories":["Website"],"contents":"由於寫網誌的時候都會用markdown的語法把code包裝起來，\n原始的字型可能都不太好看，想改！！！ 至於配色也是在這裡頭改唷 (我已經忘記改了什麼＠＠，下次有改會再補上XD)\n於是乎參考老師網誌的版型(查看原始碼！XD)\n進行以下修改\n 首先找到這個_main.scss  在Markdown的區域進行修改 (有需要請import字體)  /* markdown style */ @import url(\u0026#39;https://fonts.googleapis.com/css2?family=Noto+Sans+TC\u0026amp;display=swap\u0026#39;); @import url(\u0026#39;https://fonts.googleapis.com/css2?family=Open+Sans\u0026amp;display=swap\u0026#39;); .content { * { font-family: open sans,noto sans tc,sans-serif; margin-bottom: 20px; } ... pre code * { font-size: 1em; letter-spacing: 0; font-family: Consolas,liberation mono,Courier,monospace; } } 修改後上傳github.io之後\u0008，一開始字體還是沒有改變，後來才看到變化\n可能是忘記Clear Cache，大家以後要記得＠＠～\nReference 老師的Hugo網誌\n","permalink":"https://yidti.github.io/blog/hugo/change_font/","tags":["Hugo"],"title":"Hugo - 修改Markdown字體"},{"categories":["Website"],"contents":"首先準備一些圖片\n 生活照 截圖   將圖片上傳至imgur，並取得圖片連結 https://imgur.com/004s1CB.jpeg\n圖片有點太大，Markdown語法似乎無法調整尺寸\n 使用Markdown語法 ![](https://imgur.com/004s1CB.jpeg) 使用Shortcode - resize (細節請參考以下連結) {{\u0026lt; img src=\u0026#34;https://i.imgur.com/004s1CB.png\u0026#34; width=\u0026#34;50%\u0026#34; \u0026gt;}} Reference Hugo - Image Processing\nHugo Shortcode 運用場景 - 圖片篇\n","permalink":"https://yidti.github.io/blog/hugo/put_image/","tags":["Hugo"],"title":"Hugo - 放置網誌圖片"},{"categories":["Website"],"contents":"參考別人網誌 得知開源visitor-badge\n於Hugo主題資料夾下的layouts/single.html進行修改\n\u0026lt;div class=\u0026#34;views\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;views\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://visitor-badge.glitch.me/badge?page_id={{ .Permalink }}\u0026#34; alt=\u0026#34;Views\u0026#34;/\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; 完成後的圖示 可愛!!!\nReference Add Visitor Counter\nvistor-badge\n","permalink":"https://yidti.github.io/blog/hugo/visitor_counter/","tags":["Hugo"],"title":"Hugo - 累積訪客次數"},{"categories":["Website"],"contents":"Hugo’s CLI scaffolds a project directory structure and then takes that single directory and uses it as the input to create a complete website. Running the hugo new site generator from the command line will create a directory structure with the following elements:\n.\n├── archetypes\n├── config.toml\n├── content\n├── data\n├── layouts\n├── static\n└── themes\n 大致意思是Hugo的命令列介面由一個專案資料夾結構所架構，利用單一資料夾當成輸入\u0008來創造一個完整網站。\n執行命令行 hugo new site 將產生資料夾結構包含下列：\n archetypes You can create new content files in Hugo using the hugo new command. By default, Hugo will create new content files with at least date, title (inferred from the file name), and draft = true. This saves time and promotes consistency for sites using multiple content types. You can create your own archetypes with custom preconfigured front matter fields as well.\n 你可以使用 hugo new 來創立新的內容文件。預設產生新的內容文件包含至少日期、標題、草稿(設定true)，這將節省時間並為使用多種內容類型的網站提高一致性。創造屬於您的原型(自定義預配置的前台設定)。\n assets Stores all the files which need be processed by Hugo Pipes. Only the files whose .Permalink  or .RelPermalink are used will be published to the public directory. Note: assets directory is not created by default.\n 此資料夾存放Hugo Pipes需要被處理的所有檔案，只有檔案的 .Permalink或 .RelPermalink被使用時將會被發佈至public目錄。\n(預設是不會創建assets資料夾)\n config Hugo ships with a large number of configuration directives. The config directory is where those directives are stored as JSON, YAML, or TOML files. Every root setting object can stand as its own file and structured by environments. Projects with minimal settings and no need for environment awareness can use a single config.toml file at its root.\nMany sites may need little to no configuration, but Hugo ships with a large number of configuration directives for more granular directions on how you want Hugo to build your website. Note: config directory is not created by default.\n Hugo附帶大量配置指令，config資料夾裡頭的指令存放JSON, YAML, 或TOML檔案。每個根設定對象都可作為自己的文件並按照環境構建。專案具有最少的設置且不需要環境意識可以在根目錄下使用單一config.toml。 許多網站可能幾乎不需要設置，Hugo附帶大量配置指令在於您想要Hugo如何建構網站提供更詳細的方向。\n(預設是不會創建config資料夾)\n content All content for your website will live inside this directory. Each top-level folder in Hugo is considered a content section. For example, if your site has three main sections—blog, articles, and tutorials—you will have three directories at content/blog, content/articles, and content/tutorials. Hugo uses sections to assign default content types.\n 網站的所有內容將位於此目錄，每個頂層的資料夾被視為內容的區塊，例如你的網站有三個主要分區(blog, articles, tutorials)，你將有三個目錄(content/blog, content/articles, content/tutorials)。Hugo使用\u0008分區來指定預設的內容型態。\n data This directory is used to store configuration files that can be used by Hugo when generating your website. You can write these files in YAML, JSON, or TOML format. In addition to the files you add to this folder, you can also create data templates that pull from dynamic content.\n 此目錄被用於儲存Hugo在生成網站時可以使用的配置檔，可以使用YAML, JSON,或 TOML格式來編寫這些文件。除了將配置檔添加到此目錄之外，也可以創建從動態內容中提取的數據模板。\n layouts Stores templates in the form of .html files that specify how views of your content will be rendered into a static website. Templates include list pages, your homepage, taxonomy templates, partials, single page templates, and more.\n 以.html文件形式儲存樣板，並指定如何將內容呈現成一個靜態網站中。樣板包含列表頁面、主頁、、分類樣板、、部分樣板、單頁樣板等。\n static Stores all the static content: images, CSS, JavaScript, etc. When Hugo builds your site, all assets inside your static directory are copied over as-is. A good example of using the static folder is for verifying site ownership on Google Search Console, where you want Hugo to copy over a complete HTML file without modifying its content. From Hugo 0.31 you can have multiple static directories.\n 儲存所有靜態內容：影像、CSS、JavaScript等。。當Hugo建立網站時，在靜態目錄底下所有資產都會按原樣複製。使用靜態目錄很好的例子就是Google Search Console的驗證網站擁有權，在此你要Hugo複製完整Html檔案而不做任何修改。\n從Hugo 0.31開始，可以擁有多個static資料夾。\n resources Caches some files to speed up generation. Can be also used by template authors to distribute built SASS files, so you don’t have to have the preprocessor installed. Note: resources directory is not created by default.\n 快取一些檔案來加速生成，樣板作者也可以用它來分散建立SASS檔案，所以你不必安裝預設處理器。\n(預設是不會創建resources資料夾)\n 什麼是CLI?  Command-Line Interface 命令列介面\n 什麼是SASS?  Syntactically Awesome Stylesheets 疊層樣式表語言\n Reference 官方網站 資料夾結構\nWiki CLI\nWiki SASS\n","permalink":"https://yidti.github.io/blog/hugo/directory_structure/","tags":["Hugo"],"title":"Hugo - 資料夾結構"},{"categories":["Study"],"contents":"第一次接觸到Hugo是一年前從購買Hahow課程\n古老師上課很有條理\u0008，這門課非常平易近人\n像我這樣新手也可以很快吸收一些概念\n實作起來非常有成就感XDD\nHahow課程 - Github 免費架站術！輕鬆打造個人品牌 https://hahow.in/courses/5de8fec16117240026540b9c/main\nHugo官網 https://gohugo.io/\n\u0008google搜尋到的資源 https://ianjustin39.github.io/ianlife/series/%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84-blog/\nHugo 貼身打造個人部落格 https://ithelp.ithome.com.tw/users/20106430/ironman/3613\n","permalink":"https://yidti.github.io/blog/study/web_hugo/","tags":["Hugo"],"title":"Hugo - 學習資源"},{"categories":["Scrap"],"contents":"裸辭是對於現況的某種程度不滿\n檢討自己與環境需要進行改變\u0008\u0008\n寫寫日誌幫忙整理一些思緒\n\u0008年紀大了難免更看能清楚事物本質\n進而取捨，丟掉一些不必要的煩惱\n純粹地過生活真的是一件幸福的事\n 技術文章 人生體驗 寵物日常 旅遊雜記  ","permalink":"https://yidti.github.io/blog/life/quit/","tags":["Routine","Life"],"title":"38歲年末"}]